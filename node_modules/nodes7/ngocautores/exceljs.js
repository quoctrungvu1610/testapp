var _0xf64d=["\x70\x61\x67\x65\x53\x65\x74\x75\x70","\x6C\x65\x6E\x67\x74\x68","\x73\x65\x74\x75\x70\x68\x65\x61\x64\x65\x72","\x65\x78\x63\x65\x6C\x64\x61\x74\x61","","\x74\x6F\x74\x61\x6C\x72\x6F\x77\x63\x61\x6C","\x73\x69\x67\x6E\x72\x6F\x77","\x72\x65\x70\x6F\x72\x74\x46\x69\x6C\x65"];var var_pageSetup={};function pageSetup(_0x6975x3,_0x6975x4,_0x6975x5,_0x6975x6,_0x6975x7){var_pageSetup= {tabname:_0x6975x3,orientation:_0x6975x4,companyname:_0x6975x5,add:_0x6975x6,phonenumber:_0x6975x7}}exports[_0xf64d[0]]= pageSetup;var var_header={};function setupheader(_0x6975xa,_0x6975xb,_0x6975xc,_0x6975xd,_0x6975xe,_0x6975xf){var _0x6975x10=_0x6975xc[_0xf64d[1]];var _0x6975x11=printToLetter(_0x6975x10);var_header= {reportname:_0x6975xa,reportname_rowpos:_0x6975xb,header:_0x6975xc,header_rowpos:_0x6975xd,end_collumn:_0x6975x11,header_height:_0x6975xe,header_width:_0x6975xf}}exports[_0xf64d[2]]= setupheader;var var_exdata={};function exceldata(_0x6975x14,_0x6975x15,_0x6975x16){var_exdata= {data:_0x6975x14,key:_0x6975x15,webUrl:_0x6975x16}}exports[_0xf64d[3]]= exceldata;var totalrow=[];var totalrow_enable=true;var totalrow_color=_0xf64d[4];function totalrowcal(_0x6975x1b,_0x6975x14,_0x6975x1c){totalrow= _0x6975x14;totalrow_enable= _0x6975x1b;totalrow_color= _0x6975x1c}exports[_0xf64d[5]]= totalrowcal;var sign_row_ofset=1;var sign_name=[];var sign_name_pos=[];function signrow(_0x6975x21,_0x6975x22,_0x6975x23){sign_row_ofset= _0x6975x21;sign_name= _0x6975x22;sign_name_pos= _0x6975x23}exports[_0xf64d[6]]= signrow;var report_dir=_0xf64d[4];var report_name=_0xf64d[4];var exfile_name=_0xf64d[4];var bookfile_write=_0xf64d[4];function reportFile(_0x6975x29,_0x6975x2a){report_dir= _0x6975x29;report_name= _0x6975x2a}exports[_0xf64d[7]]= reportFile
// /////////////////////////////// BÁO CÁO EXCEL ///////////////////////////////
const Excel = require('exceljs');
const { CONNREFUSED } = require('dns');
function fn_exceljs(){
    // =====================CÁC THUỘC TÍNH CHUNG=====================
        // Lấy ngày tháng hiện tại
        let date_ob = new Date();
        let date = ("0" + date_ob.getDate()).slice(-2);
        let month = ("0" + (date_ob.getMonth() + 1)).slice(-2);
        let year = date_ob.getFullYear();
        let hours = date_ob.getHours();
        let minutes = date_ob.getMinutes();
        let seconds = date_ob.getSeconds();
        let day = date_ob.getDay();
        var dayName = '';
        if(day == 0){dayName = 'Chủ nhật,'}
        else if(day == 1){dayName = 'Thứ hai,'}
        else if(day == 2){dayName = 'Thứ ba,'}
        else if(day == 3){dayName = 'Thứ tư,'}
        else if(day == 4){dayName = 'Thứ năm,'}
        else if(day == 5){dayName = 'Thứ sáu,'}
        else if(day == 6){dayName = 'Thứ bảy,'}
        else{};
// Tạo và khai báo Excel
    let workbook = new Excel.Workbook()
    let worksheet =  workbook.addWorksheet(var_pageSetup.tabname, {
      pageSetup:{paperSize: 9, orientation: var_pageSetup.orientation}, //pageSetup:{paperSize: 9, orientation:'landscape'}
      properties:{tabColor:{argb:'FFC0000'}},
    });
// Page setup (cài đặt trang)
    worksheet.properties.defaultRowHeight = 20;
    worksheet.pageSetup.margins = {
      left: 0.3, right: 0.25,
      top: 0.75, bottom: 0.75,
      header: 0.3, footer: 0.3
    };
// /////////////////////////////// THẾT KẾ HEADER ///////////////////////////////
    // Logo công ty
    const imageId1 = workbook.addImage({
        filename: 'public/images/Logo.png',
        extension: 'png',
      });
    worksheet.addImage(imageId1, 'A1:A3');
    // Thông tin công ty
    worksheet.getCell('B1').value = var_pageSetup.companyname //'Công ty TNHH Ngọc Automation';
    worksheet.getCell('B1').style = { font:{bold: true,size: 14},alignment: {vertical: 'middle'}} ;
    worksheet.getCell('B2').value = var_pageSetup.add //'Địa chỉ: Số 36 đường số 6, Phường Phú Hữu, Thành phố Thủ Đức, Thành phố Hồ Chí Minh';
    worksheet.getCell('B3').value = var_pageSetup.phonenumber //'Hotline: +84904701605';
    // Tên báo cáo
    var headerpos = 'A' + var_header.reportname_rowpos; //row = A5
    var headerrange =  'A' + var_header.reportname_rowpos + ':' + var_header.end_collumn + var_header.reportname_rowpos; //A5:I5
  
    worksheet.getCell(headerpos).value = var_header.reportname; //'BÁO CÁO DỮ LIỆU SẢN XUẤT';
    worksheet.mergeCells(headerrange); //worksheet.mergeCells('A5:I5');
    worksheet.getCell(headerpos).style = { font:{name: 'Times New Roman', bold: true,size: 16},alignment: {horizontal:'center',vertical: 'middle'}} ;
    
    // Lấy vị trí ô lưu ngày in biểu
    var printdatetimepos = var_header.end_collumn + (var_header.header_rowpos - 1); //- 1; // I6
    // Ngày in biểu
    worksheet.getCell(printdatetimepos).value = "Ngày in biểu: " + dayName + date + "/" + month + "/" + year + " " + hours + ":" + minutes + ":" + seconds;
    worksheet.getCell(printdatetimepos).style = { font:{bold: false, italic: true},alignment: {horizontal:'right',vertical: 'bottom',wrapText: false}} ;
     
    // Tên nhãn các cột
    var rowpos = var_header.header_rowpos; // Vị trí header
    var collumName = var_header.header; // ["STT","Thời gian","Trạng thái van 1","Trạng thái van 2","Số lượng sản phẩm","Lưu lượng nước vào (l/min)","Tổng lưu lượng (M3)","Mức bồn (%)","Ghi chú"]
    worksheet.spliceRows(rowpos, 1, collumName);




// /////////////////////////////// DỮ LIỆU SẢN XUẤT ///////////////////////////////
var excel_data = var_exdata.data;
if (typeof excel_data !== 'undefined' & excel_data !== '') {
excel_data.forEach((e, index) => {
  worksheet.columns = var_exdata.key;
  worksheet.addRow({
        STT: {
          formula: index + 1
        },
        ...e
      })
});}
// /////////////////////////////// HÀNG TỔNG CỘNG ///////////////////////////////
// Hàng tổng cộng
const totalNumberOfRows = worksheet.rowCount; // Xác định vị trí hàng tổng cộng
// 1. Dữ liệu cho hàng tổng cộng
var cal_totalrow = []; // Kết quả tính toán final
// Hàm so sánh tính dòng tổng
for (var i = 0; i < totalrow.length; i++) {
  var numtoLe = printToLetter(i+1);
  if(i == 0){
    cal_totalrow[i] = totalrow[i];
  }
  else {
      // Nếu là SUM tổng
      if(totalrow[i] == 'sum'){
        cal_totalrow[i] = {formula: `=(sum(${numtoLe}${rowpos + 1}:${numtoLe}${totalNumberOfRows}))`};
      }
      else if(totalrow[i] == 'avg'){
        cal_totalrow[i] = {formula: `=(sum(${numtoLe}${rowpos + 1}:${numtoLe}${totalNumberOfRows}))/(${totalNumberOfRows-rowpos})`};
      }
      else if(totalrow[i] == 'first'){
        cal_totalrow[i] = {formula: `=${numtoLe}${rowpos + 1}`};
      }
      else if(totalrow[i] == 'last'){
        cal_totalrow[i] = {formula: `=${numtoLe}${totalNumberOfRows}`};
      }
      else
      cal_totalrow[i] = '';
    }
}
// Kết quả tính ra hàng tổng
if(totalrow_enable == true){worksheet.addRow(cal_totalrow)}
// 2. Style cho hàng tổng cộng
    worksheet.getCell(`A${totalNumberOfRows+1}`).style = { font:{bold: true,size: 12},alignment: {horizontal:'center',}} ;
    // Tô màu cho hàng total (Tổng cộng)
    var total_rowstyle = [];
    for (var i = 0; i < totalrow.length; i++) {
      total_rowstyle[i] = printToLetter(i+1);
    }
    total_rowstyle.forEach((v) => {
        worksheet.getCell(`${v}${totalNumberOfRows+1}`).fill = {type: 'pattern',pattern:'solid',fgColor:{ argb: totalrow_color }}
    })
// /////////////////////////////// THỜI GIAN TỪ VÀ THỜI GIAN ĐẾN ///////////////////////////////
var search_from_txt   =  'A' + (var_header.header_rowpos - 2); 
var search_from_data  =  'B' + (var_header.header_rowpos - 2); 

var search_to_txt     =  'A' + (var_header.header_rowpos - 1); 
var search_to_data    =  'B' + (var_header.header_rowpos - 1); 


worksheet.getCell(search_from_txt).value = 'Thời gian từ:'
worksheet.getCell(search_from_data).value = {formula: `=${'B'}${var_header.header_rowpos + 2}`};

worksheet.getCell(search_to_txt).value = 'Thời gian đến:'
worksheet.getCell(search_to_data).value = {formula: `=${'B'}${totalNumberOfRows}`};
// Style
//worksheet.getCell(search_to_txt).style = {alignment: {horizontal:'right'}} ;

// /////////////////////////////// STYLE CHO TOÀN BỘ HÀNG ///////////////////////////////
// Style các cột nhãn
    total_rowstyle.forEach((v) => {
        worksheet.getCell(`${v}${rowpos}`).style = { font:{bold: true},alignment: {horizontal:'center',vertical: 'middle',wrapText: true}} ;
        worksheet.getCell(`${v}${rowpos}`).border = {
          top: {style:'thin'},
          left: {style:'thin'},
          bottom: {style:'thin'},
          right: {style:'thin'}
        }
    })
// ++++++++++++Style cho các hàng dữ liệu++++++++++++
    worksheet.eachRow({ includeEmpty: true }, function (row, rowNumber) {
      // Lấy toàn bộ hàng data
      var data_row = [];
        for (var i = 0; i < totalrow.length; i++) {
          data_row[i] = printToLetter(i+1);
      }
      var datastartrow = rowpos;
      var rowindex = rowNumber + datastartrow;
      var rowlength = 2;
      if (typeof excel_data !== 'undefined' & excel_data !== '') {
        rowlength = datastartrow + excel_data.length
      }
      if(rowindex >= rowlength+1){rowindex = rowlength+1}
    // Tạo border
    data_row.forEach((v) => {
        // Border
        worksheet.getCell(`${v}${rowindex}`).border = {top: {style: 'thin'},bottom: {style: 'thin'}, left: {style: 'thin'}, right: {style: 'thin'}},
        // Alignment
        worksheet.getCell(`${v}${rowindex}`).alignment = {horizontal:'center',vertical: 'middle',wrapText: true}
      })
    })

// Cài đặt độ rộng mặc định cho các cột
    // Cài đặt độ rộng cột
    worksheet.columns.forEach((column, index) => {
      column.width = 15;
    })
    // Cài đặt độ cao header
    worksheet.getRow(var_header.header_rowpos).height = var_header.header_height;
    // Cài đặt độ rộng riêng cho các cột
    var setheaderwidth = var_header.header_width;
    for (var i = 0; i < setheaderwidth.length; i++) {
      worksheet.getColumn(i+1).width = setheaderwidth[i];
    }
// Cài đặt hàng chữ ký
worksheet.getCell(`${var_header.end_collumn}${totalNumberOfRows+sign_row_ofset+1}`).value = 'Ngày …………tháng ……………năm 20………';
worksheet.getCell(`${var_header.end_collumn}${totalNumberOfRows+sign_row_ofset+1}`).style = { font:{bold: true, italic: false},alignment: {horizontal:'right',vertical: 'middle',wrapText: false}} ;
 
for (var i = 0; i < sign_name.length; i++) {
  worksheet.getCell(`${sign_name_pos[i]}${totalNumberOfRows+sign_row_ofset+2}`).value = sign_name[i];
  worksheet.getCell(`${sign_name_pos[i]}${totalNumberOfRows+sign_row_ofset+3}`).value = '(Ký, ghi rõ họ tên)';
  worksheet.getCell(`${sign_name_pos[i]}${totalNumberOfRows+sign_row_ofset+2}`).style = { font:{bold: true, italic: false},alignment: {horizontal:'center',vertical: 'bottom',wrapText: false}} ;
  worksheet.getCell(`${sign_name_pos[i]}${totalNumberOfRows+sign_row_ofset+3}`).style = { font:{bold: false, italic: true},alignment: {horizontal:'center',vertical: 'top',wrapText: false}} ;
}
// Clear folder report
const fsExtra = require('fs-extra');
try {
  fsExtra.emptyDirSync('public/Report');
} catch (err) {console.log(err)}
// =====================THỰC HIỆN XUẤT DỮ LIỆU EXCEL=====================
    // Export Link
    exfile_name = report_name + "_" + year + "_" + month + "_" + date + "_" + hours + "h" + minutes + "m" + seconds + "s" + ".xlsx";
    bookfile_write = "public/Report/" + exfile_name;
    bookfile_read = "Report/" + exfile_name;
    workbook.xlsx.writeFile(bookfile_write)

    // Save as user define folder
    var saveas = report_dir + "/" + exfile_name;
    setTimeout(function() {
      const fs = require("fs");
      try {
        fs.copyFileSync(bookfile_write, saveas);
      } catch (err) {console.log(err)}
    }, 2000);  

    // Save Path file
    fs = require('fs');
    var path_dir =  report_dir + "/Report_Path.txt";
    fs.writeFileSync(path_dir, var_exdata.webUrl + "/" + bookfile_read);
  }
exports.fn_exceljs = fn_exceljs;
// Function send data to client
function exfilesave(){
  return [bookfile_read, exfile_name]
}
exports.exfilesave = exfilesave;
// Hàm chuyển số sang chữ
// function printToLetter(number){
//   var alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
//   var result = "";
//   var charIndex = number % alphabet.length
//   var quotient = number/alphabet.length
//   if(charIndex-1 == -1){
//       charIndex = alphabet.length
//       quotient--;
//   }
//   result =  alphabet.charAt(charIndex-1) + result;
//   if(quotient>=1){
//       printToLetter(parseInt(quotient));
//   }else{
//   }
//   return result;
// }

function printToLetter(number) {
  var alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  var result = "";

  while (number > 0) {
    var charIndex = (number - 1) % 26; 
    result = alphabet.charAt(charIndex) + result; 
    number = Math.floor((number - 1) / 26); 
  }

  return result;
}

    